<계산식>
총 예탁금액 : 총입금액 - 총출금액
투자가능자본 : 총 예탁금액 + 수익금
배당수익금 : 해당기간 배당금총합
차액수익금 : 정해진 기간 동안의 매도 거래 중 매수&매도 쌍이 성사된 거래들의 손익 합
수익금 : 차액수익금 + 배당수익금
수익률 : 수익금 / 투자가능자본 * 100
배당.csv
날짜 종목코드 배당금
거래.csv
날짜 매수 종목명 매수가(칸 하나당 수량1)
날짜 매도 종목명 매수가
입출금.csv
날짜 거래금액(+/-) 총투자가능자산
1. 정해진 기간까지의 거래내용을 거래.csv에서 불러오기
2. 종목별로 분류 & 총 매도가 계산
3. 종목별 매도수량만큼, 가장 최근의 매수 가져외서 총 매수가 계산
4. 차액금 계산 (총매도가 - 총매수가)
5. 배당수익금 계산 (기간 내 총 배당수익금)
6 총 수익금 계산 (차액금 +배당수익금)
5. 수익률 계산 (수익금/총자본*100)
6. 출력
==================================
yyyy.mm.dd ~ yyyy.mm.dd (y년 m개월 d일)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
총 매도가 : xxxxx$
총 매수가 :
.......................................
총 차액금 :
총 배당금 :
........................................
총 수익금 :
총 수익률 :
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
거래종목 : [ ] x개
........................................
[ 종목별 수익금 ]
1. xxxx yy$ (yyy ₩)
2. ...
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
===================================

	
마지막날 계산 : 다음달1일 - 1일
show 2024.3. 2025.1.
show .1. .2. (2025.1.1~2025.2.(30/31))
show .1.-.3. .1.+.1.(2024.10.1~2025.2.(마지막날)
show
def trs(self, cmd)
split = cmd.split(' ')
now = datetime.now()
if len(self.split) == 1: 특정 년|월|일만
start = split.split('.')
if start[0] != None:// 년도인 경우
self.start = datetime(start[0],1,1)
self.end = datetime(start[0]+1,1,1) - datetime.relativeDate(Date=1)
else if start[1] != None: // 월인 경우
self.start = datetime(now.y, start[1], 1)
self.end = dt(now.y, start[1], start[1]+1-rel(d=1)
else if start[2] != None : //일인 경우
self.start = dt(now.y,now.m,now.d)
self.end = dt(now.y,now.m,now.d)
else: // 2개 파라미터 모두 받았을 경우
self.start = split[0].split('.')
self.end = split[1].split('.')
print(self.start)
if start[0] == None :
start[0] = now.year
if start[1] == None:
start[1] = now.month
if start[2] == None:
start[2]=1
if end[0]==N:
end[0] = now.year
if end[1]==N:
end[1] = now.m
